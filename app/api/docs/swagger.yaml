definitions:
  models.SaveUserInRedis:
    properties:
      access_token:
        type: string
      email:
        type: string
      email_password:
        type: string
      id:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  models.SendNewsToSupscribersReq:
    properties:
      news:
        type: string
      subscribers:
        items:
          $ref: '#/definitions/models.Subscriber'
        type: array
    type: object
  models.SendScheduledEmailsApiReq:
    properties:
      minutsAfter:
        type: integer
      news:
        type: string
      subscribers:
        items:
          $ref: '#/definitions/models.Subscriber'
        type: array
    type: object
  models.StatusInfo:
    properties:
      message:
        type: string
    type: object
  models.Subscriber:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
    type: object
  models.User:
    properties:
      email:
        type: string
      email_password:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
host: localhost:9090
info:
  contact:
    email: azizbekhojimurodov@gmail.com
    name: Azizbek
    url: https://t.me/azizbek_dev_2005
  description: This test task server
  title: Mailganer-test-task
  version: "1.0"
paths:
  /email/schedule:
    post:
      consumes:
      - application/json
      description: Through this api, news and informatin of all subscirbers will be
        sent
      parameters:
      - description: SendScheduledEmailsApiReq
        in: body
        name: SendScheduledEmailsApiReq
        required: true
        schema:
          $ref: '#/definitions/models.SendScheduledEmailsApiReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.StatusInfo'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/models.StatusInfo'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StatusInfo'
      security:
      - BearerAuth: []
      summary: SendScheduledEmails
      tags:
      - Email
  /email/tosubscribers:
    post:
      consumes:
      - application/json
      description: Through this api, news and informatin of all subscirbers will be
        sent
      parameters:
      - description: SendNewsToSupscribersReq
        in: body
        name: SendNewsToSupscribersReq
        required: true
        schema:
          $ref: '#/definitions/models.SendNewsToSupscribersReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.StatusInfo'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/models.StatusInfo'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StatusInfo'
      security:
      - BearerAuth: []
      summary: SendNewsToSupscribers
      tags:
      - Email
  /user/login:
    get:
      consumes:
      - application/json
      description: Through this api, User can login
      parameters:
      - description: email
        in: query
        name: email
        required: true
        type: string
      - description: password
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SaveUserInRedis'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/models.StatusInfo'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StatusInfo'
      summary: Login users
      tags:
      - User
  /user/profile:
    get:
      consumes:
      - application/json
      description: Through this api, User can login
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SaveUserInRedis'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/models.StatusInfo'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StatusInfo'
      security:
      - BearerAuth: []
      summary: Login users
      tags:
      - User
  /user/register:
    post:
      consumes:
      - application/json
      description: Through this api, news and informatin of all subscirbers will be
        sent
      parameters:
      - description: User
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SaveUserInRedis'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/models.StatusInfo'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StatusInfo'
      summary: SendEmailWithSupscribers
      tags:
      - User
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
